---
- name: Update package cache [MacOS]
  tags: always
  ansible.builtin.command: brew update
  changed_when: false

- name: packages present [MacOS]
  community.general.homebrew:
    name: "{{ item }}"
    state: present
  loop:
    - asciidoctor
    - bpytop
    - dive
    - docutils
    - fd
    - fzf
    - git
    - git-delta
    - htop
    - httpie
    - k9s
    - kubectx
    - macvim
    - mosh
    - mycli
    - pgcli
    - prettier
    - rg
    - the_silver_searcher
    - watch
    - yamllint
    - eza

- name: Ensure $HOME/bin exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/bin"
    state: directory

- name: Set nvim directory
  set_fact:
    nvim_path: "{{ ansible_env.HOME }}/bin/nvim-macos"
    nvim_download_path: /tmp/nvim-macos.tar.gz
    nvim_untar_path: /tmp

- name: Set Neovim URL based on architecture
  set_fact:
    nvim_url: >-
      {% if ansible_architecture == "x86_64" %}
        https://github.com/neovim/neovim/releases/download/v0.10.0/nvim-macos-x86_64.tar.gz
      {% elif ansible_architecture == "arm64" %}
        https://github.com/neovim/neovim/releases/download/v0.10.0/nvim-macos-arm64.tar.gz
      {% endif %}

- name: Download nvim tarfile
  get_url:
    url: "{{ nvim_url }}"
    dest: "{{ nvim_download_path }}"

- name: Extract nvim tarfile
  command:
    # cmd: tar -xzf /tmp/nvim-macos.tar.gz -C "{{ ansible_env.HOME }}/bin"
    cmd: tar -xzf "{{ nvim_download_path }}" -C "{{ nvim_untar_path }}"

- name: Remove existing nvim package
  command:
    cmd: rm -r "{{ nvim_path }}"
  args:
    removes: "{{ nvim_path }}"

- name: Rename extracted nvim directory
  command:
    cmd: mv -f "{{ nvim_untar_path }}/nvim-macos-{{ ansible_architecture }}" "{{ nvim_path }}"
  args:
    creates: "{{ nvim_path }}"

- name: Link binary
  ansible.builtin.file:
    src: "{{ nvim_path }}/bin/nvim"
    dest: "{{ ansible_env.HOME }}/bin/nvim"
    state: link
