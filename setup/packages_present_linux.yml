---
- name: Download and add the GitHub CLI GPG key
  become: true
  ansible.builtin.get_url:
    url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
    dest: /usr/share/keyrings/githubcli-archive-keyring.gpg
    mode: 'go+r'

- name: Add the GitHub CLI repository
  become: true
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list.d/github-cli.list
    line: "deb [arch={{ ansible_architecture }} signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
    create: yes

- name: Update package cache [Linux]
  become: true
  tags: always
  apt:
    update_cache: true
  changed_when: false
  ignore_errors: yes

- name: Packages present [Linux]
  become: true
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    # - dive # only available as .deb file
    # - git-delta # only available as .deb file
    #- asciidoctor
    #- curl
    #- fd-find
    #- fonts-powerline
    #- gh
    #- git
    #- htop
    #- httpie
    #- mosh
    #- mycli
    #- pgcli
      #- python3-pip # for nvim
      #- silversearcher-ag
      #- tar
      #- unzip
      #- vim-nox
      #- watch
      #- yamllint
      #- tmux

- name: Ensure $HOME/bin exists
  ansible.builtin.file:
    path: "${HOME}/bin"
    state: directory

- name: Download nvim tarfile
  get_url:
    url: https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz
    dest: "/tmp/nvim-linux64.tar.gz"

- name: Extract nvim tarfile
  ansible.builtin.unarchive:
    src: "/tmp/nvim-linux64.tar.gz"
    dest: "${HOME}/bin"

- name: Link binary
  ansible.builtin.file:
    src: "${HOME}/bin/nvim-linux64/bin/nvim"
    dest: "${HOME}/bin/nvim"
    state: link
